{
	"openapi": "3.0.0",
	"info": {
		"title": "Taskify",
		"description": "API to task manager",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "http://localhost:5000/api/v1",
			"description": "Local Server"
		},
		{
			"url": "https://api-taskify.up.railway.app/api/v1/",
			"description": "Production Server"
		}
	],
	"paths": {
		"/users/register": {
			"post":{
				"summary": "Register a new user",
				"tags": ["Unauthenticated"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserRegister"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User registered successfully"
					},
					"400": {
						"description": "User register failed"
					},
					"409": {
						"description": "User already exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/users/login": {
			"post":{
				"summary": "Login of user",
				"tags": ["Unauthenticated"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserLogin"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Logged user"
					},
					"401": {
						"description": "Invalid credentials, email or password are incorrets"
					}
				}
			}
		},
		"/users/profile": {
			"get": {
				"summary": "Show profile of user",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "Data of user profile"
					},
					"401": {
						"description": "Unautorized user, try loggin"
					},
					"404": {
						"description": "User profile not Found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"put": {
				"summary": "Update profile of user",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserUpdate"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Data of user updated"
					},
					"401": {
						"description": "User not authenticated"
					},
					"409": {
						"description": "This email already exist"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			},
			"delete": {
				"summary": "Delete profile of user",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"responses": {
					"200": {
						"description": "User deleted"
					},
					"401": {
						"description": "User not authenticated"
					},
					"404": {
						"description": "User not found"
					},
					"500": {
						"description": "Internal server error"
					}
				}
			}
		},
		"/tasks": {
			"get": {
				"summary": "Lista todas as tarefas com ou sem filtros",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"name": "status",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"enum": ["Pendente", "Concluída"]
						}
					},
					{
						"name": "priority",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"enum": ["Necessária", "Importante", "Urgente"]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Lista todas as tarefas ou filtradas ",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Tasks"
									}
								}
							}
						}
					},
					"401": {
						"description": "Não autorizado"
					},
					"404": {
						"description": "Tarefa não encontrada"
					},
					"500": {
						"description": "Erro interno do servidor"
					}
				}
			},
			"post": {
				"summary": "Cria uma nova tarefa",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskCreate"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Tarefa criada com sucesso"
					},
					"400": {
						"description": "A aplicação só permite prioridades como Necessária ,Importante e Urgente ou status Pendente ou Concluída"
					},
					"500": {
						"description": "Erro interno do servidor"
					}
				}
			}
		},
		"/tasks/{id}": {
			"get": {
				"summary": "Lista uma tarefa específica",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
				"responses": {
					"200": {
						"description": "Tarefa específica"
					},
					"400": {
						"description": "Dados inválidos na solicitação"
					},
					"404": {
						"description": "Tarefa não encontrada"
					},
					"500": {
						"description": "Erro interno do servidor"
					}
				}
			},
			"put": {
				"summary": "Atualiza uma tarefa específica do usuário",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/TaskUpdate"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Tarefa atualizada com sucesso"
					},
					"401": {
						"description": "Pode ser que não tenha autoriazação para atualizar a tarefa"
					},
					"400": {
						"description": "Dados inválidos na solicitação"
					},
					"500": {
						"description": "Erro interno do servidor"
					}
				}
			},
			"delete": {
				"summary": "Deleta a tarefa do usuário",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
				"responses": {
					"200": {
						"description": "Tarefa deletada"
					},
					"404": {
						"description": "Tarefa não encontrada"
					},
					"500": {
						"description": "Erro interno do servidor"
					}
				}
			}
		},
		"/tasks/changeStatus/{id}": {
			"patch": {
				"summary": "Atualiza um status da tarefa específica do usuário",
				"tags": ["Authenticated"],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],

				"requestBody": {
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/changeStatus"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Status da Tarefa atualizada com sucesso"
					},
					"400": {
						"description": "Dados inválidos na solicitação"
					},
					"404": {
						"description": "Tarefa não encontrada"
					},
					"500": {
						"description": "Erro interno do servidor"
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"schemas": {
			"Tasks":{
				"type":"object",
				"properties":{
					"id": { "type":"string"},
					"title": { "type":"string"},
					"description": { "type":"string"},
					"status": {
						"type": "string",
						"enum":["Pendente", "Concluída"]
					},
					"priority": {
						"type": "string",
						"enum": ["Necessária", "Importante", "Urgente"]
					},
					"createdAt": { "type": "string", "format": "date-time"},
					"updatedAt": { "type": "string", "format": "date-time"}
				}
			},
			"UserRegister": {
				"type": "object",
				"properties": {
					"firstname": { "type": "string" },
					"lastname": { "type": "string" },
					"email": { "type": "string" },
					"password": { "type": "string" }
				},
				"required": ["firstname", "lastname", "email", "password"],
				"example": {
					"firstname": "John",
					"lastname": "Doe",
					"email": "john.doe@gmail.com",
					"password": "mirants@2025"
				}
			},
			"UserLogin": {
				"type": "object",
				"properties": {
					"email": { "type": "string" },
					"password": { "type": "string" }
				},
				"required": ["firstname", "lastname", "email", "password"],
				"example": {
					"email": "john.doe@gmail.com",
					"password": "mirants@2025"
				}
			},
			"UserUpdate": {
				"type": "object",
				"properties": {
					"firstname": { "type": "string" },
					"lastname": { "type": "string" },
					"email": { "type": "string" },
					"password": { "type": "string" }
				}
			},
			"TaskCreate": {
				"type": "object",
				"properties": {
					"title": { "type": "string" },
					"description": { "type": "string" },
					"priority": { "type": "string",
					"enum": ["Necessária", "Importante", "Urgente"]
			},
				"status": { "type": "string",
				"enum": ["Pendente", "Concluída"]
			}
				},
				"required": ["title", "description", "priority", "status"],
				"example": {
					"title": "Estudar docker",
					"description": "Estudar docker básico",
					"priority": "Importante",
					"status": "Pendente"
				}
			},
			"TaskUpdate": {
				"type": "object",
				"properties": {
					"title": { "type": "string" },
					"description": { "type": "string" },
					"priority": { "type": "string",
						"enum": ["Necessária", "Importante", "Urgente"]
				},
					"status": { "type": "string",
					"enum": ["Pendente", "Concluída"]
				}
				}
			},
			"changeStatus": {
				"type": "object",
				"properties": {
					"status": {
						"type": "string",
						"enum": ["Pendente", "Concluída"]
					 }
				}
			}

		}
	}
}